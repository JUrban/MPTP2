#!/usr/bin/perl -w
my $cache = shift @ARGV;
my $last = $ARGV[$#ARGV];
my $tl = 1 + shift @ARGV;
my $prog = shift @ARGV;

if(-r $last) ## only do caching if the last argument is a readable file
{
    die unless(-d $cache);
    $last = pop @ARGV;
    use Digest::SHA1;

    open(F,$last) or die;
    my $sh1=Digest::SHA1->new; 
    $sh1->addfile(F); 
    my $inputsha1 = $sh1->hexdigest;
    my ($twochars) = $inputsha1 =~ m/^(..).*/;
    close(F);
    my $optsname = Digest::SHA1::sha1_hex(join(':::',($tl,$prog,@ARGV)));

    if(-r "$cache/$optsname/$twochars/$inputsha1") # we have found the cached result
    {
	exec("cat $cache/$optsname/$twochars/$inputsha1");
    }
    else
    {
	unless(-d "$cache/$optsname")
	{
	    `mkdir -p $cache/$optsname`;
	    open(P,">$cache/$optsname/.params");
	    print P (join(':::',($tl,$prog,@ARGV)), "\n");
	    close(P);
	}
	`mkdir -p $cache/$optsname/$twochars` unless(-d "$cache/$optsname/$twochars");
	exec("ulimit -t $tl; $prog @ARGV $last | tee $cache/$optsname/$twochars/$inputsha1");
    }
}
else
{
    exec("ulimit -t $tl; $prog @ARGV ");
}
