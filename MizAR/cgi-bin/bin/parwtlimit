#!/usr/bin/perl -w

# parallelizes vampire with four different extensions, the biggest is run with -sd 1

use strict;
my $tl = 1 + shift @ARGV;
my $prog = shift @ARGV;
my $filestem = shift @ARGV;
my $mmlversion = shift @ARGV;   # needed for minimization
# my $vampire_params_sd  = shift @ARGV;  
my $vampire_params2 = join(' ', @ARGV);
my $vampire_params_sd = " -ss included -sd "; # the -d sine param without a number
my @smallextensions = ('', '.big0', '.big1'); 
my $bigext = '.big';

for my $ext (@smallextensions)
{
#    print("ulimit -t $tl; $prog $vampire_params2 $filestem$ext > $filestem$ext.eout1 & ");
    system("ulimit -t $tl; $prog $vampire_params2 $filestem$ext > $filestem$ext.eout1 & ");
}


system("ulimit -t $tl; $prog $vampire_params_sd 1 $vampire_params2 $filestem$bigext > $filestem$bigext.eout1 & ");

my $num = $tl+1;
while($num > 0)
{
    $num = $num - 2;
    sleep(2);
    foreach my $ext (@smallextensions, $bigext)
    {
	my $exit_code = system('grep', '-q', '\\bfile(',  "$filestem$ext.eout1");
	if(0 == $exit_code)
	{
	    my $ext0 = $ext;
	    open(F1,"$filestem$ext.eout1");
	    while(<F1>) 
	    {
		if(m/.*\bfile\([^\),]+, *([a-z0-9A-Z_]+) *\)/)
		{
		    `grep -h "^fof.$1," /home/mptp/public_html/mml$mmlversion/mptp/00allmmlax  $filestem$ext >> $filestem.small `; }
	    }
	    close(F1);
	    system("ulimit -t $tl; $prog $vampire_params2 $filestem.small > $filestem.small.eout1");
	    my $exit_code1 = system('grep', '-q', '\\bfile(',  "$filestem.small.eout1");
	    $ext0 = '.small' if(0 == $exit_code1);

	    `grep 'SZS status' $filestem$ext0.eout1 |tail -n1 > $filestem.status`;
	    exec('grep', '\\bfile(',  "$filestem$ext0.eout1");
	    exit 0;
	}
    }
}

`grep 'SZS status' $filestem$bigext.eout1 |tail -n1 > $filestem.status`;

